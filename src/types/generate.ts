import { spawnSync } from 'node:child_process'
import { readFileSync, writeFileSync } from 'node:fs'

main()

async function main() {
  await generate(
    'data',
    'http://localhost:8080/',
    (schema) => {
      return schema
    },
    (schema) => {
      return schema
    },
  )
}

async function generate(
  name: string,
  url: string,
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  jsonFn: null | ((schema: any) => any),
  tsFn: (schema: string) => string,
) {
  let schema = await (await fetch(url, { headers: { Accept: 'application/json' } })).json()
  schema = jsonFn ? jsonFn(schema) : schema
  writeFileSync(`tmp/${name}.json`, JSON.stringify(schema))
  spawnSync('npx', ['--yes', 'openapi-typescript@6.3.9', `tmp/${name}.json`, '--output', `src/types/${name}.ts`], {
    stdio: 'inherit',
  })

  schema = readFileSync(`src/types/${name}.ts`).toString()
  schema = tsFn ? tsFn(schema) : schema

  writeFileSync(`src/types/${name}.ts`, `// generated by src/types/generate.ts\n\n` + schema)
}
