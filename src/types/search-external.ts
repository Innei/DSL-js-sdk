// generated by src/types/generate.ts

import {components as data} from './data-v1'
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/suggestions/spellcheck": {
    /** Spell correction (did-you-mean) */
    get: operations["spellCorrectionv2"];
  };
  "/suggestions/related-addresses": {
    /** Related addresses */
    get: operations["relatedAddresses"];
  };
  "/suggestions/autocomplete": {
    /** Autocomplete */
    get: operations["autoCompleteV2"];
  };
  "/dapps": {
    /** Search dapps */
    get: operations["searchv2"];
  };
  "/activities": {
    /** Search activities */
    get: operations["searchFeedV2"];
  };
  "/activities/{id}": {
    /** Get activity */
    get: operations["activityDetail"];
  };
}

export type webhooks = Record<string, any>;

export interface components {
  schemas: {
    UniRespListString: {
      data?: string[];
      meta?: string;
      error?: string;
    };
    /** @description RelatedAddressRespDTO */
    RelatedAddressRespDTO: {
      option?: string;
      address?: string;
    };
    UniRespListRelatedAddressRespDTO: {
      data?: components["schemas"]["RelatedAddressRespDTO"][];
      meta?: string;
      error?: string;
    };
    /** @description 自动补全响应 */
    AutoCompleteRespDTO: {
      option?: string;
      /** @enum {string} */
      type?: "DOMAIN" | "NFT" | "FEED" | "WIKI";
      /** @description nft collection logoUrl */
      thumb?: string;
      address?: string;
    };
    UniRespListAutoCompleteRespDTO: {
      data?: components["schemas"]["AutoCompleteRespDTO"][];
      meta?: string;
      error?: string;
    };
    DaapDocDTO: {
      id?: string;
      name?: string;
      icon?: string;
      type?: string;
      url?: string;
      status?: string;
      description?: string;
      /** Format: float */
      score?: number;
      last_edited_time?: string;
      app_entry_url?: string;
      similar_items?: string[];
    };
    DaapDocDTO0: {
      id?: string;
      name?: string;
      icon?: string;
      type?: string;
      url?: string;
      status?: string;
      description?: string;
      /** Format: float */
      score?: number;
      last_edited_time?: string;
      app_entry_url?: string;
      similar_items?: components["schemas"]["DaapDocDTO"][];
    };
    DaapSearchRespDTO: {
      docs?: components["schemas"]["DaapDocDTO0"][];
      /** Format: int64 */
      total?: number;
    };
    UniRespDaapSearchRespDTO: {
      data?: components["schemas"]["DaapSearchRespDTO"];
      meta?: string;
      error?: string;
    };
    ActivitiesExDTO: {
      author?: string;
      media?: string[];
      /** Format: float */
      score?: number;
      highlighting?: components["schemas"]["FeedRankDocHighlightingDTO"];
    };
    FeedRankActionDoc4ExternalDTO: {
      tag?: string;
      type?: string;
      platform?: string;
      /** Format: int64 */
      index?: number;
      transaction_hash?: string;
      address_from?: string;
      address_to?: string;
      related_urls?: string[];
      search_extension?: components["schemas"]["ActivitiesExDTO"];
    };
    FeedRankDoc4ExternalDTO: {
      id?: string;
      owner?: string;
      /** Format: int64 */
      timestamp?: number;
      tag?: string;
      type?: string;
      network?: string;
      platform?: string;
      actions?: components["schemas"]["FeedRankActionDoc4ExternalDTO"][];
      transaction_hash?: string;
    };
    FeedRankDocHighlightingDTO: {
      title?: string;
      author?: string;
      body?: string;
    };
    FeedSearchNetworkAggDTO: {
      /** @enum {string} */
      network?: "ALL" | "EIP1577" | "BINANCE_SMART_CHAIN" | "ARBITRUM" | "ARWEAVE" | "AVALANCHE" | "ETHEREUM" | "OPTIMISM" | "POLYGON" | "XDAI" | "ZKSYNC" | "CROSSBELL" | "AVAX" | "FARCASTER";
      /** Format: int64 */
      count?: number;
    };
    FeedSearchPlatformAggDTO: {
      /** @enum {string} */
      platform?: "ALL" | "MIRROR" | "FARCASTER" | "XLOG" | "CROSSBELL" | "LENS" | "MATTERS" | "MASTODON";
      /** Format: int64 */
      count?: number;
    };
    FeedSearchResp4ExternalDTO: {
      /** Format: int32 */
      total?: number;
      docs?: components["schemas"]["FeedRankDoc4ExternalDTO"][];
      network_agg?: components["schemas"]["FeedSearchNetworkAggDTO"][];
      platform_agg?: components["schemas"]["FeedSearchPlatformAggDTO"][];
    };
    UniRespFeedSearchResp4ExternalDTO: {
      data?: components["schemas"]["FeedSearchResp4ExternalDTO"];
      meta?: string;
      error?: string;
    };
    FeedRankActionDoc4ExternalDetailDTO: {
      platform?: string;
      tag?: string;
      type?: string;
      /** Format: int64 */
      index?: number;
      metadata?: data['schemas']['Transfer']['metadata'];
      address_from?: string;
      address_to?: string;
      related_urls?: string[];
    };
    FeedRankDoc4ExternalDetailDTO: {
      id?: string;
      owner?: string;
      /** Format: int64 */
      timestamp?: number;
      tag?: string;
      type?: string;
      network?: string;
      platform?: string;
      actions?: components["schemas"]["FeedRankActionDoc4ExternalDetailDTO"][];
      transaction_hash?: string;
    };
    UniRespFeedRankDoc4ExternalDetailDTO: {
      data?: components["schemas"]["FeedRankDoc4ExternalDetailDTO"];
      meta?: string;
      error?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, any>;

export interface operations {

  /** Spell correction (did-you-mean) */
  spellCorrectionv2: {
    parameters: {
      query: {
        /** @example vitalak */
        keyword: string;
        /** @description return count */
        limit?: number;
        /** @description type */
        type?: "ALL" | "DOMAIN" | "CONTENT" | "WIKI" | "DAPP";
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UniRespListString"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": Record<string, any>;
        };
      };
    };
  };
  /** Related addresses */
  relatedAddresses: {
    parameters: {
      query: {
        /** @example vitalik */
        keyword: string;
        /** @description return count */
        limit?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UniRespListRelatedAddressRespDTO"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": Record<string, any>;
        };
      };
    };
  };
  /** Autocomplete */
  autoCompleteV2: {
    parameters: {
      query: {
        /**
         * @description keyword
         * @example vitali
         */
        keyword: string;
        /** @description return count */
        limit?: number;
        /** @description type */
        type?: "ALL" | "DOMAIN" | "CONTENT" | "WIKI" | "DAPP";
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UniRespListAutoCompleteRespDTO"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": Record<string, any>;
        };
      };
    };
  };
  /** Search dapps */
  searchv2: {
    parameters: {
      query: {
        /**
         * @description search keyword
         * @example uniswap
         */
        keyword: string;
        /** @description pagination offset, min offset is 0 */
        offset?: number;
        /** @description pagination limit, max limit is 20 */
        limit?: number;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UniRespDaapSearchRespDTO"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": Record<string, any>;
        };
      };
    };
  };
  /** Search activities */
  searchFeedV2: {
    parameters: {
      query: {
        /**
         * @description search keyword
         * @example vitalik
         */
        keyword: string;
        /**
         * @description pagination offset, min offset is 0
         * @example 0
         */
        offset?: number;
        /**
         * @description pagination limit, max limit is 20
         * @example 12
         */
        limit?: number;
        /** @example ALL */
        platform?: ("ALL" | "MIRROR" | "FARCASTER" | "XLOG" | "CROSSBELL" | "LENS" | "MATTERS" | "MASTODON")[];
        /** @example ALL */
        network?: ("ALL" | "EIP1577" | "BINANCE_SMART_CHAIN" | "ARBITRUM" | "ARWEAVE" | "AVALANCHE" | "ETHEREUM" | "OPTIMISM" | "POLYGON" | "XDAI" | "ZKSYNC" | "CROSSBELL" | "AVAX" | "FARCASTER")[];
        /**
         * @description sort by, default is NONE
         * @example NONE
         */
        sort?: "NONE" | "TIMESTAMP_DESC";
        /**
         * @description language, default is ALL
         * @example ALL
         */
        lang?: "ALL" | "ENGLISH" | "CHINESE" | "JAPANESE";
        /**
         * @description Timestamp, date range gte
         * @example -1
         */
        gte?: number;
        /**
         * @description Timestamp, date range lte
         * @example -1
         */
        lte?: number;
        /** @description author */
        author?: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UniRespFeedSearchResp4ExternalDTO"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": Record<string, any>;
        };
      };
    };
  };
  /** Get activity */
  activityDetail: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description OK */
      200: {
        content: {
          "application/json": components["schemas"]["UniRespFeedRankDoc4ExternalDetailDTO"];
        };
      };
      /** @description Bad Request */
      400: {
        content: {
          "application/json": Record<string, any>;
        };
      };
    };
  };
}
