/**
 * This file was auto-generated by scripts/create-component-alias.ts
 * Do not make direct changes to the file.
 */

import type { components } from "./openapi-schema.js";

export type Action = components["schemas"]["Action"];
export type ActivitiesResponse = components["schemas"]["ActivitiesResponse"];
export type Activity = components["schemas"]["Activity"];
export type ActivityResponse = components["schemas"]["ActivityResponse"];
export type Calldata = components["schemas"]["Calldata"];
export type Direction = components["schemas"]["Direction"];
export type Tag = components["schemas"]["Tag"];
export type Type = components["schemas"]["Type"];
export type Network = components["schemas"]["Network"];
export type Platform = components["schemas"]["Platform"];
export type Fee = components["schemas"]["Fee"];
export type MetaCursor = components["schemas"]["MetaCursor"];
export type MetaTotalPages = components["schemas"]["MetaTotalPages"];
export type BridgeTransaction = components["schemas"]["BridgeTransaction"];
export type StakeTransaction = components["schemas"]["StakeTransaction"];
export type TransactionEvent = components["schemas"]["TransactionEvent"];
export type StakeStaking = components["schemas"]["StakeStaking"];
export type Chip = components["schemas"]["Chip"];
export type Node = components["schemas"]["Node"];
export type NodeEvent = components["schemas"]["NodeEvent"];
export type NodeMinTokensToStakeSnapshot =
  components["schemas"]["NodeMinTokensToStakeSnapshot"];
export type StakerProfitSnapshot =
  components["schemas"]["StakerProfitSnapshot"];
export type ChipPNL = components["schemas"]["ChipPNL"];
export type OperationProfit = components["schemas"]["OperationProfit"];
export type OperationProfitPNL = components["schemas"]["OperationProfitPNL"];
export type BriefEpoch = components["schemas"]["BriefEpoch"];
export type Epoch = components["schemas"]["Epoch"];
export type BriefEpochDistribution =
  components["schemas"]["BriefEpochDistribution"];
export type EpochDistribution = components["schemas"]["EpochDistribution"];
export type WorkerDetail = components["schemas"]["WorkerDetail"];
export type NetworkWorker = components["schemas"]["NetworkWorker"];
export type EpochAPYSnapshot = components["schemas"]["EpochAPYSnapshot"];
export type Image = components["schemas"]["Image"];
export type ResponseError = components["schemas"]["ResponseError"];
export type CountSnapshot = components["schemas"]["CountSnapshot"];
export type Approval = components["schemas"]["Approval"];
export type Bridge = components["schemas"]["Bridge"];
export type ExchangeLiquidity = components["schemas"]["ExchangeLiquidity"];
export type ExchangeStaking = components["schemas"]["ExchangeStaking"];
export type ExchangeSwap = components["schemas"]["ExchangeSwap"];
export type SocialMint = components["schemas"]["SocialMint"];
export type SocialProxy = components["schemas"]["SocialProxy"];
export type SocialPost = components["schemas"]["SocialPost"];
export type SocialRevise = components["schemas"]["SocialRevise"];
export type SocialShare = components["schemas"]["SocialShare"];
export type SocialDelete = components["schemas"]["SocialDelete"];
export type SocialComment = components["schemas"]["SocialComment"];
export type SocialReward = components["schemas"]["SocialReward"];
export type SocialProfile = components["schemas"]["SocialProfile"];
export type MetaverseTrade = components["schemas"]["MetaverseTrade"];
export type MetaverseBurn = components["schemas"]["MetaverseBurn"];
export type MetaverseMint = components["schemas"]["MetaverseMint"];
export type MetaverseTransfer = components["schemas"]["MetaverseTransfer"];
export type RssFeed = components["schemas"]["RssFeed"];
export type TransactionApproval = components["schemas"]["TransactionApproval"];
export type TransactionBridge = components["schemas"]["TransactionBridge"];
export type TransactionTransfer = components["schemas"]["TransactionTransfer"];
export type TransactionBurn = components["schemas"]["TransactionBurn"];
export type TransactionMint = components["schemas"]["TransactionMint"];
export type CollectibleApproval = components["schemas"]["CollectibleApproval"];
export type CollectibleTrade = components["schemas"]["CollectibleTrade"];
export type CollectibleTransfer = components["schemas"]["CollectibleTransfer"];
export type CollectibleBurn = components["schemas"]["CollectibleBurn"];
export type CollectibleMint = components["schemas"]["CollectibleMint"];
